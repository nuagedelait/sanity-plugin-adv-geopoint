---
name: Publish Package on NPM

# Workflow name based on selected inputs. Fallback to default Github naming when expression evaluates to empty string
run-name: >-
  ${{
    inputs.release && inputs.test && 'Build ➤ Test ➤ Publish to NPM' ||
    inputs.release && !inputs.test && 'Build ➤ Skip Tests ➤ Publish to NPM' ||
    github.event_name == 'workflow_dispatch' && inputs.test && 'Build ➤ Test' ||
    github.event_name == 'workflow_dispatch' && !inputs.test && 'Build ➤ Skip Tests' ||
    ''
  }}

on:
  # Build on commits pushed to branches without a PR if it's in the allowlist
  push:
    branches: ['release/**']
  # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch:
    inputs:
      release:
        description: Release new version
        required: true
        default: false
        type: boolean

concurrency:
  # On PRs builds will cancel if new pushes happen before the CI completes, as it defines `github.head_ref` and gives it the name of the branch the PR wants to merge into
  # Otherwise `github.run_id` ensures that you can quickly merge a queue of PRs without causing tests to auto cancel on any of the commits pushed to main.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  log-the-inputs:
    name: Log inputs
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Inputs: $INPUTS"
        env:
          INPUTS: ${{ toJSON(inputs) }}

  install:
    runs-on: ubuntu-latest
    name: Install
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: '**/package-lock.json'
          node-version: lts/*
      - run: yarn --frozen-lockfile

  test:
    needs: [install]
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: '**/package-lock.json'
          node-version: lts/*
      - run: yarn run lint

  build:
    needs: [test]
    runs-on: ubuntu-latest
    name: build
    steps:
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: '**/package-lock.json'
          node-version: lts/*
      - run: yarn run prepublishOnly

  release:
    needs: [build]
    runs-on: ubuntu-latest
    name: Semantic release
    steps:
      - uses: actions/checkout@v3
        with:
          # Need to fetch entire commit history to
          # analyze every commit since last release
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: '**/package-lock.json'
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org/'
          scope: '@nuagedelait'
      - run: npm publish --access public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
